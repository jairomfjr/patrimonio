spring:
  application:
    name: sistema-patrimonio-api
  
  profiles:
    active: dev
  
  datasource:
    url: jdbc:postgresql://localhost:5432/patrimonio_db
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
    
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
    open-in-view: false
  
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
  
  cache:
    type: redis
    redis:
      time-to-live: 600000
      cache-null-values: false
  
  data:
    redis:
      host: localhost
      port: 6379
      timeout: 2000ms
  
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME:}
    password: ${MAIL_PASSWORD:}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  
  quartz:
    job-store-type: jdbc
    jdbc:
      initialize-schema: always
    properties:
      org:
        quartz:
          scheduler:
            instanceName: PatrimonioScheduler
            instanceId: AUTO
          jobStore:
            class: org.quartz.impl.jdbcjobstore.JobStoreTX
            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
            tablePrefix: QRTZ_
            isClustered: false
            clusterCheckinInterval: 20000
            useProperties: false
            dataSource: quartzDataSource
          threadPool:
            class: org.quartz.simpl.SimpleThreadPool
            threadCount: 10
            threadPriority: 5
            threadsInheritContextClassLoaderOfInitializingThread: true
          dataSource:
            quartzDataSource:
              provider: hikaricp
              driver: org.postgresql.Driver
              URL: jdbc:postgresql://localhost:5432/patrimonio_db
              user: postgres
              password: postgres
              maxConnections: 5
              validationQuery: SELECT 1

# Server Configuration
server:
  port: 8080
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024

# Security Configuration
security:
  jwt:
    secret: ${JWT_SECRET:your-secret-key-here-make-it-very-long-and-secure-in-production}
    expiration: 86400000 # 24 hours

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,env,configprops
  endpoint:
    health:
      show-details: when-authorized
      show-components: always
  prometheus:
    metrics:
      export:
        enabled: true
  health:
    redis:
      enabled: true
    db:
      enabled: true

# Logging Configuration
logging:
  level:
    com.manus.patrimonio: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Swagger Configuration
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method
    tags-sorter: alpha
    enabled: true
  default-produces-media-type: application/json
  default-consumes-media-type: application/json

# Custom Configuration
patrimonio:
  upload:
    max-file-size: 10MB
    allowed-file-types: jpg,jpeg,png,pdf,doc,docx,xls,xlsx
  notification:
    email:
      enabled: true
      from: patrimonio@empresa.com
    slack:
      enabled: false
      webhook-url: ${SLACK_WEBHOOK_URL:}
  audit:
    enabled: true
    retention-days: 2555 # 7 years
  backup:
    enabled: true
    schedule: "0 2 * * *" # Daily at 2 AM
    retention-days: 30

